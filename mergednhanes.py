# -*- coding: utf-8 -*-
"""MergedNHANES

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sv3H5Yp1P_tx-LFAQ61UxTZ6d0z8nXoQ
"""

# Install required packages
!pip install pandas pyreadstat

# Import libraries
import pandas as pd
import pyreadstat
import os
import glob

# Upload files - run this and use the file uploader that appears
from google.colab import files
uploaded = files.upload()  # This will prompt you to upload your XPT files

# List all uploaded XPT files
xpt_files = glob.glob('*.xpt')
print(f"Uploaded files: {xpt_files}")

# Read and merge all XPT files
merged_data = pd.DataFrame()

for file in xpt_files:
    print(f"Processing {file}...")
    try:
        # Read XPT file
        df, meta = pyreadstat.read_xport(file)
        print(f"  Shape: {df.shape}")

        # For the first file, use it as the base
        if merged_data.empty:
            merged_data = df
        else:
            # Merge with existing data - adjust this based on how you want to merge
            # This assumes you want to join on common columns or simply append rows
            # You may need to modify this depending on your specific merging needs
            try:
                # Try to merge on common columns - adjust 'on' parameter as needed
                # This is just a placeholder - you'll need to specify which columns to join on
                common_cols = list(set(merged_data.columns).intersection(set(df.columns)))
                if common_cols:
                    merged_data = pd.merge(merged_data, df, on=common_cols, how='outer')
                else:
                    # If no common columns, simply append
                    merged_data = pd.concat([merged_data, df], ignore_index=True)
            except Exception as e:
                print(f"  Error merging: {e}")
                print("  Appending rows instead...")
                merged_data = pd.concat([merged_data, df], ignore_index=True)
    except Exception as e:
        print(f"  Error reading file: {e}")

# Check the result
print("\nMerged data shape:", merged_data.shape)
print("Merged data columns:", merged_data.columns.tolist())

# Save the merged data
merged_data.to_csv('merged_data.csv', index=False)
files.download('merged_data.csv')  # Download the merged result